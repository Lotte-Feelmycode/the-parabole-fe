import styled from '@emotion/styled';
import CloseButton from '@components/input/CloseButton';
import MessageNode from '@components/chat/MessageNode';
import { GET_DATA } from '@apis/defaultApi';

import { useState } from 'react';
import SendMessageNode from './SendMessageNode';
import { isEmpty } from '@utils/functions';
import { useGetToken } from '@hooks/useGetToken';

export default function ChatContainer({ setModalState }) {
  const [sendMessage, setSendMessage] = useState("");

  const [messageList, setMessageList] = useState([]);
  const [storeList, setStoreList] = useState();
  const [productList, setProductList] = useState();
  const [couponList, setCouponList] = useState();
  const [selectStore, setSelectStore] = useState();
  const [selectProduct, setSelectProduct] = useState();
  const [selectCoupon, setSelectCoupon] = useState();

  let infoTxt = "1. Ïä§ÌÜ†Ïñ¥\n";
  infoTxt += "2. ÏÉÅÌíà(Ïù¥Î¶ÑÏúºÎ°ú Í≤ÄÏÉâ)\n";
  infoTxt += "3. ÏÉÅÌíà(Ïä§ÌÜ†Ïñ¥Î°ú Í≤ÄÏÉâ)\n";
  infoTxt += "4. Ïø†Ìè∞(Ïä§ÌÜ†Ïñ¥Î°ú Í≤ÄÏÉâ)";

  const closeModal = (e) => {
    e.preventDefault();
    setModalState(false);
  };

  const changeSendMsgHandler = (e) => {
    e.preventDefault();
    setSendMessage(e.target.value);
  }

  const submitHandler = (e) => {
    e.preventDefault();

    if (isEmpty(sendMessage)) {
      alert("Î©îÏãúÏßÄÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
      return;
    }
    setMessageList((_chatMessages) => [..._chatMessages, "//" + sendMessage]);

    // Ïä§ÌÜ†Ïñ¥ Ï†ÑÏ≤¥ Ï°∞Ìöå
    if (sendMessage.includes("Ïä§ÌÜ†Ïñ¥")) {
      GET_DATA('/chat').then((res) => {
        setStoreList(res);

        let msg = "Ïù∏Í∏∞ Ïä§ÌÜ†Ïñ¥ Î™©Î°ùÏûÖÎãàÎã§.";
        msg += "\n";

        res.map((item, index) => {
          msg += "üè†"
          msg += item;
          msg += "\n";
        });
        
        setMessageList((_chatMessages) => [..._chatMessages, msg]);
      });
    } else if (Array.isArray(storeList) && (storeList[0].includes(sendMessage) || storeList[1].includes(sendMessage))) {
      GET_DATA(`/chat/list?storeName=${sendMessage}`).then((res) => {
        setProductList(res);
        setSelectStore(sendMessage);

        
        let msg = sendMessage + "Î°ú Í≤ÄÏÉâÌïòÏã† Ïä§ÌÜ†Ïñ¥Ïùò Ïù∏Í∏∞ ÏÉÅÌíà TOP3 ÏûÖÎãàÎã§.";
        msg += "\n";

        res.map((item, index) => {
          msg += "‚ú®"
          msg += item;
          msg += "\n";
        });
        
        setMessageList((_chatMessages) => [..._chatMessages, msg]);
      });
    } else if (selectStore && sendMessage.includes("Ïø†Ìè∞") && !sendMessage.includes("Îã§Ïö¥")) {
      GET_DATA(`/chat/coupon?storeName=${selectStore}`)
      .then((res) => {
        setCouponList(res);

        let msg = sendMessage + "Î°ú Í≤ÄÏÉâÌïòÏã† Ïä§ÌÜ†Ïñ¥Ïùò Ïø†Ìè∞Î™©Î°ù ÏûÖÎãàÎã§.";
        msg += "\n";

        res.map((item, index) => {
          msg += "üéà "
          msg += item;
          msg += "\n";
        });
        
        setMessageList((_chatMessages) => [..._chatMessages, msg]);
      })
    } else if (sendMessage.includes("ÏÖÄÎü¨")) {
      let msg = "üìå ÏÖÄÎü¨ Îì±Î°ù Î∞©Î≤ï";
      msg += "\nÏö∞ÏÑ† Îçî ÌååÎùºÎ≥ºÎûò ÌöåÏõêÍ∞ÄÏûÖÏùÑ ÌïòÏãúÍ≥†, Í≥†Í∞ùÏÑºÌÑ∞Î°ú Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî!";
      msg += "\n";
      msg += "\nÎçî ÌååÎùºÎ≥ºÎûò ÏÖÄÎü¨ ÌöåÏõê Îì±Î°ùÏãú Ïù¥Î≤§Ìä∏ Îì±Î°ù, Ïø†Ìè∞ Îì± Îã§ÏñëÌïú ÎßàÏºÄÌåÖ ÌòúÌÉùÏùÑ Ï≤¥ÌóòÌï† Ïàò ÏûàÏäµÎãàÎã§.";
      setMessageList((_chatMessages) => [..._chatMessages, msg]);
    } else if (sendMessage.includes("Ïø†Ìè∞") && sendMessage.includes("Îã§Ïö¥")) {
      let msg = "üéÅ Ïø†Ìè∞ Îã§Ïö¥Î°úÎìú Î∞©Î≤ï";
      msg += "\nA. ÏÉÅÌíà ÏÉÅÏÑ∏ ÌéòÏù¥ÏßÄÏóêÏÑú Ìï¥Îãπ Ïä§ÌÜ†Ïñ¥Ïùò ÌòúÌÉùÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÏñ¥Ïöî! ";
      msg += "\nB. Ïä§ÌÜ†Ïñ¥ ÌôàÏóêÏÑúÎèÑ ÌòúÌÉù Î∞õÍ∏∞ Î≤ÑÌäºÏùÑ ÌÜµÌï¥ Ïø†Ìè∞ÏùÑ Îã§Ïö¥Î°úÎìúÌï† Ïàò ÏûàÏñ¥Ïöî!";

      msg += "\n";
      msg += "\n(Îã§Ïö¥Î°úÎìú Î∞õÏùÄ Ïø†Ìè∞ÏùÄ Ï£ºÎ¨∏ Ïãú Ï†ÅÏö©Í∞ÄÎä•Ìï©ÎãàÎã§.)";
      setMessageList((_chatMessages) => [..._chatMessages, msg]);
    } else if (sendMessage.includes("Ïù¥Î≤§Ìä∏") && sendMessage.includes("Îì±Î°ù")) {
      let msg = "üìå Ïù¥Î≤§Ìä∏ Îì±Î°ù Î∞©Î≤ï";
      msg += "\nA. Ïö∞ÏÑ† ÏÖÄÎü¨Î°ú Î°úÍ∑∏Ïù∏ Ìï¥Ï£ºÏÑ∏Ïöî. ";
      msg += "\nB. ÏÖÄÎü¨ Ïò§ÌîºÏä§ÏóêÏÑú Ïù¥Î≤§Ìä∏ Îì±Î°ù Î©îÎâ¥Î°ú ÏßÑÏûÖÌï¥Ï£ºÏÑ∏Ïöî.";
      msg += "\nC. Ïù¥Î≤§Ìä∏ Ï†ïÎ≥¥Îì§ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!";

      msg += "\n";
      msg += "\n(ÏÑ†Ï∞©Ïàú Ïù¥Î≤§Ìä∏Ïùò Í≤ΩÏö∞ Í∏∞Ï°¥ Ïä§ÏºÄÏ•¥Ïù¥ ÏûàÎäîÏßÄ ÌôïÏù∏ Ìï¥Ï£ºÏÑ∏Ïöî!)";
      setMessageList((_chatMessages) => [..._chatMessages, msg]);
    } else if (sendMessage.includes("Ï£ºÎ¨∏")) {
      GET_DATA(`/chat/order`, '', useGetToken()).then((res) => {
        let msg = "";
        if (!isEmpty(res)) {
          msg = localStorage.getItem("name")+"ÎãòÏùò Ï¥ù Ï£ºÎ¨∏ Í∏àÏï°ÏùÄ";
          msg += res
          msg += "ÏûÖÎãàÎã§";
        } else {
          msg = localStorage.getItem("name")+"ÎãòÏùò Ï£ºÎ¨∏ÎÇ¥Ïó≠Ïù¥ ÏóÜÏäµÎãàÎã§.";
          setMessageList((_chatMessages) => [..._chatMessages, msg]);
        }
      });
    } else if (sendMessage.includes("Ïù¥Î≤§Ìä∏")) {
      
      let eStatus = -1;
      if (sendMessage.includes("ÏßÑÌñâÏ†Ñ") || sendMessage.includes("ÏãúÏûëÏ†Ñ")) {
        eStatus = 0;
      } else if (sendMessage.includes("ÏßÑÌñâ Ï§ë") || sendMessage.includes("ÏßÑÌñâÏ§ë")) {
        eStatus = 1;
      } else if (sendMessage.includes("ÏßÑÌñâ Ï§ë") || sendMessage.includes("ÏßÑÌñâÏ§ë")) {
        eStatus = 2;
      } 

      GET_DATA(`/event/list`,  { eventStatus: eStatus }).then((res) => {
        let msg = "";

        if (res && res.length > 0) {
          msg = "ÌòÑÏû¨ ÏßÑÌñâÏ§ëÏù∏ Ïù¥Î≤§Ìä∏ Î™©Î°ùÏûÖÎãàÎã§.";
          res.map((item, index) => {
            msg += "üéÅ "
            msg += item.title;
            msg += "\n";
          });
        } else {
          msg = "ÌòÑÏû¨ ÏßÑÌñâÏ§ëÏù∏ Ïù¥Î≤§Ìä∏Í∞Ä ÏóÜÏäµÎãàÎã§!";
        }

        setMessageList((_chatMessages) => [..._chatMessages, msg]);
      });
    }
    else {
      let msg = "Ï£ÑÏÜ°Ìï¥Ïöî. ÏßàÎ¨∏ÏùÑ Ïù¥Ìï¥ÌïòÏßÄ Î™ªÌñàÏñ¥Ïöî.";
      msg += "\nÎã§Ïãú ÎßêÏîÄÌï¥Ï£ºÏÑ∏Ïöî.";

      setMessageList((_chatMessages) => [..._chatMessages, msg]);
    }

    setSendMessage("");
  }

  const handleOnKeyPress = (e) => {
    e.preventDefault();
    if (e.key === 'Enter') {
      submitHandler(e);
    }
  };

  return (
    <ModalContainer>
      <TopSection className="top-section">
        <div className="p-1 flex flex-row align-center">
          <img src="/parabole.svg" className="w-6 mr-2" />
          <p>The Parabole</p>
        </div>
        <CloseButtonSection>
          <a onClick={closeModal}>
            <CloseButton />
          </a>
        </CloseButtonSection>
      </TopSection>
      <MidSection className="overflow-y-auto">
        <MessageNode text="Î∞©Î¨∏Ìï¥Ï£ºÏÖîÏÑú Í∞êÏÇ¨Ìï©ÎãàÎã§ :) Ïñ¥ÎñªÍ≤å ÎèÑÏôÄÎìúÎ¶¥ÍπåÏöî?"/>
        <MessageNode text="1. Ïä§ÌÜ†Ïñ¥ 2. ÏÉÅÌíà(Ïù¥Î¶ÑÏúºÎ°ú Í≤ÄÏÉâ) 3. ÏÉÅÌíà(Ïä§ÌÜ†Ïñ¥Î°ú Í≤ÄÏÉâ) 4. Ïø†Ìè∞(Ïä§ÌÜ†Ïñ¥Î°ú Í≤ÄÏÉâ)"/>

        {messageList && messageList.length > 0 &&
          messageList.map((message, index) => (
            message && message.startsWith("//") ? (
              <SendMessageNode text={message.split("//")[1]}/> 
            ) : (
              <MessageNode text={message}/> 
            )
          ))
        }
      </MidSection>
      <BottomSection>
        <input
          value={sendMessage}
          onKeyUp={(e) => handleOnKeyPress(e)}
          onChange={changeSendMsgHandler}
          className="block h-10 mx-2 p-2 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500" 
          placeholder="Ï±ÑÌåÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"/>
          <button onClick={submitHandler} type="submit" className="inline-flex justify-center p-2 max-h-10 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100">
          <svg aria-hidden="true" className="w-6 h-6 rotate-90" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z"></path>
          </svg>
          <span className="sr-only">Ï±ÑÌåÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî</span>
        </button>
      </BottomSection>
    </ModalContainer>
  );
}

const ModalContainer = styled.div`
  z-index: 999;

  position: fixed;
  bottom: 1rem;
  right: 1rem;
  /* transform: translate(-50%, -50%); */

  background-color: white;
  border: 0px;
  border-radius: 20px;

  box-shadow: 0 3px 20px rgba(0, 0, 0, 0.1);
  box-sizing: border-box;
  width: 300px;
  height: 600px;
`;
const TopSection = styled.div`
  padding: 10px 15px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;

`;

const CloseButtonSection = styled.div`
  padding-top: 5px;
  text-align: right;
`;

const MidSection = styled.div`
  padding: 5px 15px;
  height: 80%;
`;

const BottomSection = styled.div`
  padding: 5px 15px;
  height: 80%;
  border-style: solid 1px gray;

  display: flex;
  flex-direction: row;
`;


const Node = styled.div`

`